{"version":3,"file":"40.min_62a1cc93c1.js","mappings":"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","sources":["webpack://tp_threejs/./src/ThreeJs/BaseApplication.ts","webpack://tp_threejs/./src/ThreeJs/Journey/BaseJourney.ts","webpack://tp_threejs/./node_modules/three/examples/jsm/geometries/TextGeometry.js","webpack://tp_threejs/./node_modules/three/examples/jsm/loaders/FontLoader.js","webpack://tp_threejs/./src/Helper/PathHelper.ts","webpack://tp_threejs/./src/ThreeJs/Journey/Journey13.ts"],"sourcesContent":["import { Camera, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from 'three';\nimport { STAGE } from './../Config';\n\n/**\n * 应用基类\n */\nexport class BaseApplication {\n\tpublic appId: string = '00';\n\tpublic appName: string = 'BASE';\n\tprotected width: number = STAGE.width;\n\tprotected height: number = STAGE.height;\n\tprotected canvas: HTMLCanvasElement = null;\n\n\tprotected scene: Scene;\n\tprotected camera: Camera;\n\tprotected renderer: WebGLRenderer;\n\tprotected viewCenter: Vector3 = new Vector3(0, 0, 0);\n\n\tpublic constructor(canvas: HTMLCanvasElement) {\n\t\tthis.canvas = canvas;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initRender(): void {\n\t\tconst renderer = new WebGLRenderer({\n\t\t\tantialias: true, // 抗锯齿开启\n\t\t\tcanvas: this.canvas,\n\t\t});\n\t\trenderer.setSize(this.width, this.height); // 设置渲染器的宽度和高度\n\t\trenderer.setClearColor('#000000', 1.0); // 设置背景颜色\n\t\trenderer.setPixelRatio(window.devicePixelRatio); // 设置设备像素比\n\n\t\tthis.renderer = renderer;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initScene(): void {\n\t\tconst scene = new Scene();\n\t\tthis.scene = scene;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initCamera(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initLight(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initModel(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreating(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreated(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始渲染\n\t */\n\tprotected onRender(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始销毁\n\t */\n\tprotected onDestroy(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始 resize\n\t */\n\tprotected onResize(): void {}\n\n\t/**\n\t * 创建后的调用\n\t */\n\tprivate create(): void {\n\t\tthis.onCreating();\n\t\tthis.initRender();\n\t\tthis.initScene();\n\t\tthis.initCamera();\n\t\tthis.initLight();\n\t\tthis.initModel();\n\t\tthis.onCreated();\n\t}\n\n\t/**\n\t * 渲染\n\t */\n\tprivate render(): void {\n\t\tthis.renderer?.clear();\n\t\tthis.onRender();\n\t\tthis.handle = requestAnimationFrame(this.render.bind(this));\n\t}\n\n\t/**\n\t * 开始执行\n\t */\n\tprivate handle: number = -1;\n\tpublic run(): void {\n\t\tthis.create();\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 视口变化\n\t */\n\tpublic resize(): void {\n\t\t// update size\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\n\t\t// update camera\n\t\tif (this.camera && this.camera instanceof PerspectiveCamera) {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\n\t\t// update renderer\n\t\tthis.renderer?.setSize(this.width, this.height);\n\t\tthis.renderer?.setPixelRatio(Math.min(2, window.devicePixelRatio));\n\n\t\tthis.onResize();\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t * 销毁清理\n\t */\n\tpublic destroy(): void {\n\t\tthis.onDestroy();\n\n\t\tthis.scene.clear();\n\t\tthis.renderer.clear();\n\t\tcancelAnimationFrame(this.handle);\n\t\tconsole.log(`销毁应用【${this.appId} ${this.appName}】`);\n\t}\n}\n","import { BaseApplication } from '../BaseApplication';\n\nexport class BaseJourney extends BaseApplication {}\n","/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport {\n\tBufferGeometry,\n\tExtrudeGeometry\n} from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\n\nexport { TextGeometry };\n","import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nexport { FontLoader, Font };\n","/**\n * Journey 资源根路径\n */\nconst JOURNEY_RESOURCE_ROOT = './resource/journey';\n\n/**\n * 获得 Journey 资源路径\n * @param paths\n * @returns\n */\nexport function getJourneyUrl(...paths: string[]): string {\n\treturn [JOURNEY_RESOURCE_ROOT, ...paths].join('/');\n}\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { getJourneyUrl } from '../../Helper/PathHelper';\nimport { BaseJourney } from './BaseJourney';\n\n/**\n * 13 Journey 3D Text\n */\n\nexport class Journey13 extends BaseJourney {\n\t/**\n\t * @override\n\t */\n\tprivate controls: OrbitControls;\n\tprotected initCamera(): void {\n\t\tconst camera = new THREE.PerspectiveCamera(75, this.width / this.height);\n\t\tcamera.position.set(0, 0, 3);\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\t\tthis.camera = camera;\n\t\tthis.scene.add(camera);\n\n\t\tthis.controls = new OrbitControls(camera, this.canvas);\n\t\t// this.controls.autoRotate = true;\n\t\tthis.controls.enableDamping = true;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initModel(): void {\n\t\t// axes\n\t\tconst axesHelp = new THREE.AxesHelper();\n\t\t// this.scene.add(axesHelp);\n\n\t\t// loader\n\t\tconst textureLoader = new THREE.TextureLoader();\n\t\tconst matcapTexture = textureLoader.load(getJourneyUrl('matcaps/7.png'));\n\t\tconst fontLoader = new FontLoader();\n\t\tfontLoader.load('./resource/journey/fonts/helvetiker_regular.typeface.json', font => {\n\t\t\t// TextGeometry\n\t\t\tconst str = 'Hello Three.js';\n\t\t\tconst geometry = new TextGeometry(str, {\n\t\t\t\tfont: font,\n\t\t\t\tsize: 0.5,\n\t\t\t\theight: 0.2,\n\t\t\t\tcurveSegments: 3,\n\t\t\t\tbevelEnabled: true,\n\t\t\t\tbevelThickness: 0.03,\n\t\t\t\tbevelSize: 0.02,\n\t\t\t\tbevelOffset: 0,\n\t\t\t\tbevelSegments: 3,\n\t\t\t});\n\t\t\tgeometry.center();\n\t\t\tconst material = new THREE.MeshMatcapMaterial();\n\t\t\tmaterial.matcap = matcapTexture;\n\t\t\t// material.wireframe = true;\n\t\t\tconst text = new THREE.Mesh(geometry, material);\n\t\t\tthis.scene.add(text);\n\n\t\t\t// donut\n\t\t\tconst donutGeometry = new THREE.TorusBufferGeometry(0.3, 0.2, 20, 45);\n\t\t\t// const donutMaterial = new THREE.MeshMatcapMaterial({ matcap: matcapTexture });\n\t\t\tfor (let i = 0; i < 100; i++) {\n\t\t\t\tconst donut = new THREE.Mesh(donutGeometry, material);\n\t\t\t\tdonut.position.x = (Math.random() - 0.5) * 10;\n\t\t\t\tdonut.position.y = (Math.random() - 0.5) * 10;\n\t\t\t\tdonut.position.z = (Math.random() - 0.5) * 10;\n\n\t\t\t\tdonut.rotation.x = Math.random() * Math.PI;\n\t\t\t\tdonut.rotation.y = Math.random() * Math.PI;\n\n\t\t\t\tconst scale = Math.random();\n\t\t\t\tdonut.scale.set(scale, scale, scale);\n\t\t\t\tthis.scene.add(donut);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onRender(): void {\n\t\tthis.controls.update();\n\t\tthis.renderer.render(this.scene, this.camera);\n\t}\n}\n"],"names":["BaseApplication","canvas","appId","appName","width","height","viewCenter","handle","this","initRender","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","initScene","scene","initCamera","initLight","initModel","onCreating","onCreated","onRender","onDestroy","onResize","create","render","clear","requestAnimationFrame","bind","run","resize","innerWidth","innerHeight","camera","aspect","updateProjectionMatrix","Math","min","destroy","cancelAnimationFrame","console","log","BaseJourney","TextGeometry","constructor","text","parameters","font","isFont","error","shapes","generateShapes","size","depth","undefined","bevelThickness","bevelSize","bevelEnabled","super","type","FontLoader","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","json","JSON","parse","e","warn","substring","length","Font","data","paths","chars","Array","from","scale","resolution","line_height","boundingBox","yMax","yMin","underlineThickness","offsetX","offsetY","i","char","ret","createPath","push","createPaths","p","pl","prototype","apply","toShapes","glyph","glyphs","familyName","x","y","cpx","cpy","cpx1","cpy1","cpx2","cpy2","o","outline","_cachedOutline","split","l","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","JOURNEY_RESOURCE_ROOT","Journey13","position","set","lookAt","add","controls","OrbitControls","enableDamping","matcapTexture","join","getJourneyUrl","geometry","curveSegments","bevelOffset","bevelSegments","center","material","matcap","donutGeometry","donut","random","z","rotation","PI","update"],"sourceRoot":""}