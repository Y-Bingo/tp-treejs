{"version":3,"file":"17.min_206de243b9.js","mappings":"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","sources":["webpack://tp_threejs/./src/Helper/DebugHelper.ts","webpack://tp_threejs/./src/ThreeJs/BaseApplication.ts","webpack://tp_threejs/./src/ThreeJs/Journey/BaseJourney.ts","webpack://tp_threejs/./src/ThreeJs/Journey/Journey15.ts"],"sourcesContent":["import * as dat from 'dat.gui';\nimport * as THREE from 'three';\n\nexport function makeXYZGUI(gui: dat.GUI, vector3: THREE.Vector3, name?: string, onChangeFn?: () => void) {\n\tif (name) {\n\t\tgui = gui.addFolder(name);\n\t}\n\tgui.add(vector3, 'x', -10, 10, 0.01).onChange(onChangeFn);\n\tgui.add(vector3, 'y', 0, 10, 0.01).onChange(onChangeFn);\n\tgui.add(vector3, 'z', -10, 10, 0.01).onChange(onChangeFn);\n\t// gui.open();\n}\n\n/**\n * 颜色转换\n */\nexport class ColorGUIHelper {\n\tprivate obj: any;\n\tprivate prop: any;\n\tconstructor(obj, prop) {\n\t\tthis.obj = obj;\n\t\tthis.prop = prop;\n\t}\n\tget value() {\n\t\treturn `#${this.obj[this.prop].getHexString()}`;\n\t}\n\tset value(hexString) {\n\t\tthis.obj[this.prop].set(hexString);\n\t}\n}\n\n/**\n * 角度转换\n */\nexport class DegRadHelper {\n\tprivate obj: any;\n\tprivate prop: any;\n\tconstructor(obj, prop) {\n\t\tthis.obj = obj;\n\t\tthis.prop = prop;\n\t}\n\tget value() {\n\t\treturn THREE.MathUtils.radToDeg(this.obj[this.prop]);\n\t}\n\tset value(v) {\n\t\tthis.obj[this.prop] = THREE.MathUtils.degToRad(v);\n\t}\n}\n\n/**\n * 字符转换\n */\nexport class StringToNumberHelper {\n\tprivate obj: any;\n\tprivate prop: any;\n\tconstructor(obj, prop) {\n\t\tthis.obj = obj;\n\t\tthis.prop = prop;\n\t}\n\tget value() {\n\t\treturn this.obj[this.prop];\n\t}\n\tset value(v) {\n\t\tthis.obj[this.prop] = parseFloat(v);\n\t}\n}\n","import { Camera, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from 'three';\nimport { STAGE } from './../Config';\n\n/**\n * 应用基类\n */\nexport class BaseApplication {\n\tpublic appId: string = '00';\n\tpublic appName: string = 'BASE';\n\tprotected width: number = STAGE.width;\n\tprotected height: number = STAGE.height;\n\tprotected canvas: HTMLCanvasElement = null;\n\n\tprotected scene: Scene;\n\tprotected camera: Camera;\n\tprotected renderer: WebGLRenderer;\n\tprotected viewCenter: Vector3 = new Vector3(0, 0, 0);\n\n\tpublic constructor(canvas: HTMLCanvasElement) {\n\t\tthis.canvas = canvas;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initRender(): void {\n\t\tconst renderer = new WebGLRenderer({\n\t\t\tantialias: true, // 抗锯齿开启\n\t\t\tcanvas: this.canvas,\n\t\t});\n\t\trenderer.setSize(this.width, this.height); // 设置渲染器的宽度和高度\n\t\trenderer.setClearColor('#000000', 1.0); // 设置背景颜色\n\t\trenderer.setPixelRatio(window.devicePixelRatio); // 设置设备像素比\n\n\t\tthis.renderer = renderer;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initScene(): void {\n\t\tconst scene = new Scene();\n\t\tthis.scene = scene;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initCamera(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initLight(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initModel(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreating(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreated(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始渲染\n\t */\n\tprotected onRender(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始销毁\n\t */\n\tprotected onDestroy(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始 resize\n\t */\n\tprotected onResize(): void {}\n\n\t/**\n\t * 创建后的调用\n\t */\n\tprivate create(): void {\n\t\tthis.onCreating();\n\t\tthis.initRender();\n\t\tthis.initScene();\n\t\tthis.initCamera();\n\t\tthis.initLight();\n\t\tthis.initModel();\n\t\tthis.onCreated();\n\t}\n\n\t/**\n\t * 渲染\n\t */\n\tprivate render(): void {\n\t\tthis.renderer?.clear();\n\t\tthis.onRender();\n\t\tthis.handle = requestAnimationFrame(this.render.bind(this));\n\t}\n\n\t/**\n\t * 开始执行\n\t */\n\tprivate handle: number = -1;\n\tpublic run(): void {\n\t\tthis.create();\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 视口变化\n\t */\n\tpublic resize(): void {\n\t\t// update size\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\n\t\t// update camera\n\t\tif (this.camera && this.camera instanceof PerspectiveCamera) {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\n\t\t// update renderer\n\t\tthis.renderer?.setSize(this.width, this.height);\n\t\tthis.renderer?.setPixelRatio(Math.min(2, window.devicePixelRatio));\n\n\t\tthis.onResize();\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t * 销毁清理\n\t */\n\tpublic destroy(): void {\n\t\tthis.onDestroy();\n\n\t\tthis.scene.clear();\n\t\tthis.renderer.clear();\n\t\tcancelAnimationFrame(this.handle);\n\t\tconsole.log(`销毁应用【${this.appId} ${this.appName}】`);\n\t}\n}\n","import { BaseApplication } from '../BaseApplication';\n\nexport class BaseJourney extends BaseApplication {}\n","import * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { ColorGUIHelper, DegRadHelper, makeXYZGUI } from '../../Helper/DebugHelper';\nimport { BaseJourney } from './BaseJourney';\n\n/**\n * Journey - Light\n */\n\nexport class Journey15 extends BaseJourney {\n\tprivate gui: dat.GUI;\n\tprivate clock: THREE.Clock;\n\n\t/**\n\t * @override\n\t */\n\tprotected onCreating(): void {\n\t\t// clock\n\t\tthis.clock = new THREE.Clock();\n\n\t\t// GUI\n\t\tthis.gui = new dat.GUI();\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onCreated(): void {\n\t\t// camera controller\n\t\tthis.controls = new OrbitControls(this.camera, this.canvas);\n\t\t// this.controls.autoRotate = true;\n\t\tthis.controls.enableDamping = true;\n\n\t\t// axes\n\t\tconst axesHelp = new THREE.AxesHelper();\n\t\tthis.scene.add(axesHelp);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprivate controls: OrbitControls;\n\tprotected initCamera(): void {\n\t\tconst camera = new THREE.PerspectiveCamera(75, this.width / this.height);\n\t\tcamera.position.set(0, 0, 3);\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\t\tthis.camera = camera;\n\t\tthis.scene.add(camera);\n\t}\n\n\tprotected initLight(): void {\n\t\tconst scene = this.scene;\n\t\t// Ambient Light\n\t\tconst ambientLight = new THREE.AmbientLight(0xffffff, 0.3);\n\t\tconst ambientGui = this.gui.addFolder('AmbientLight');\n\t\tambientGui.add(ambientLight, 'intensity', 0, 1.3, 0.01);\n\t\tambientGui.add(ambientLight, 'visible');\n\t\tambientGui.addColor(new ColorGUIHelper(ambientLight, 'color'), 'value').name('color');\n\t\tscene.add(ambientLight);\n\n\t\t// Direction Light\n\t\tconst directionLight = new THREE.DirectionalLight(0x00fffc, 0.3);\n\t\tdirectionLight.position.set(1, 0.5, 0);\n\t\tconst directionGui = this.gui.addFolder('DirectionalLight');\n\t\tdirectionGui.add(directionLight, 'intensity').min(0).max(1.3).step(0.01);\n\t\tdirectionGui.add(directionLight, 'visible');\n\t\tdirectionGui.addColor(new ColorGUIHelper(directionLight, 'color'), 'value').name('color');\n\t\tmakeXYZGUI(directionGui, directionLight.position, null, () => {\n\t\t\tdirectionLightHelper.update();\n\t\t});\n\t\tscene.add(directionLight);\n\n\t\tconst directionLightHelper = new THREE.DirectionalLightHelper(directionLight, 0.5);\n\t\tdirectionLightHelper.visible = false;\n\t\tdirectionGui.add(directionLightHelper, 'visible', 0, 1, 0.01).name('helper');\n\t\tscene.add(directionLightHelper);\n\n\t\t// HemisphereLight\n\t\tconst hemisphereLight = new THREE.HemisphereLight(0xff0000, 0x00ff, 0.3);\n\t\tconst hemisphereLightGui = this.gui.addFolder('HemisphereLight');\n\t\themisphereLightGui.add(hemisphereLight, 'intensity', 0, 1.3, 0.01);\n\t\themisphereLightGui.add(hemisphereLight, 'visible');\n\t\themisphereLightGui.addColor(new ColorGUIHelper(hemisphereLight, 'color'), 'value').name('color');\n\t\tscene.add(hemisphereLight);\n\n\t\tconst hemisphereLightHelper = new THREE.HemisphereLightHelper(hemisphereLight, 0.3);\n\t\themisphereLightHelper.visible = false;\n\t\themisphereLightGui.add(hemisphereLightHelper, 'visible', 0, 1, 0.01).name('helper');\n\t\tscene.add(hemisphereLightHelper);\n\n\t\t// Point Light\n\t\tconst pointLight = new THREE.PointLight(0xff9000, 0.3);\n\t\tconst pointLightGui = this.gui.addFolder('PointLight');\n\t\tpointLightGui.add(pointLight, 'intensity', 0, 1.3, 0.01);\n\t\tpointLightGui.add(pointLight, 'visible');\n\t\tpointLightGui.addColor(new ColorGUIHelper(pointLight, 'color'), 'value').name('color');\n\t\tmakeXYZGUI(pointLightGui, pointLight.position);\n\t\tscene.add(pointLight);\n\n\t\tconst pointLightHelper = new THREE.PointLightHelper(pointLight, 0.1);\n\t\tpointLightHelper.visible = false;\n\t\tpointLightGui.add(pointLightHelper, 'visible', 0, 1, 0.01).name('helper');\n\t\tscene.add(pointLightHelper);\n\n\t\t// Rect Light\n\t\tconst rectAreaLight = new THREE.RectAreaLight(0xffffff, 5, 2, 1);\n\t\trectAreaLight.position.set(-1, 0, -0.5);\n\t\tconst rectAreaLightGui = this.gui.addFolder('RectAreaLight');\n\t\trectAreaLightGui.add(rectAreaLight, 'intensity', 0, 1.3, 0.01);\n\t\trectAreaLightGui.add(rectAreaLight, 'visible');\n\t\trectAreaLightGui.add(rectAreaLight, 'width', 0, 20);\n\t\trectAreaLightGui.add(rectAreaLight, 'height', 0, 20);\n\t\trectAreaLightGui.add(new DegRadHelper(rectAreaLight.rotation, 'x'), 'value', -180, 180).name('x rotation');\n\t\trectAreaLightGui.add(new DegRadHelper(rectAreaLight.rotation, 'y'), 'value', -180, 180).name('y rotation');\n\t\trectAreaLightGui.add(new DegRadHelper(rectAreaLight.rotation, 'z'), 'value', -180, 180).name('z rotation');\n\t\trectAreaLightGui.addColor(new ColorGUIHelper(rectAreaLight, 'color'), 'value').name('color');\n\t\tmakeXYZGUI(rectAreaLightGui, rectAreaLight.position);\n\t\tscene.add(rectAreaLight);\n\n\t\t// Spot Light\n\t\tconst spotLight = new THREE.SpotLight(0xffffff, 1, 6, Math.PI * 0.1, 0.25, 1);\n\t\tconst spotLightGui = this.gui.addFolder('SpotLight');\n\t\tspotLightGui.add(spotLight, 'intensity', 0, 10, 0.01);\n\t\tspotLightGui.add(new DegRadHelper(spotLight, 'angle'), 'value', 0, 180).name('angle');\n\t\tspotLightGui.add(spotLight, 'penumbra', 0, 1, 0.01);\n\t\tmakeXYZGUI(spotLightGui, spotLight.position);\n\t\tscene.add(spotLight);\n\n\t\tconst spotLightHelper = new THREE.SpotLightHelper(spotLight);\n\t\tspotLightHelper.visible = false;\n\t\tspotLightGui.add(spotLightHelper, 'visible', 0, 1, 0.01).name('helper');\n\t\tscene.add(spotLightHelper);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic meshArr: THREE.Mesh[];\n\tprotected initModel(): void {\n\t\tthis.meshArr = [];\n\n\t\tconst material = new THREE.MeshStandardMaterial();\n\t\tmaterial.roughness = 0.4;\n\n\t\tconst cube = new THREE.Mesh(new THREE.BoxGeometry(0.75, 0.75, 0.75), material);\n\t\tconst torus = new THREE.Mesh(new THREE.TorusBufferGeometry(0.3, 0.2, 32, 64), material);\n\t\ttorus.position.x = 1.5;\n\n\t\tconst sphere = new THREE.Mesh(new THREE.SphereBufferGeometry(0.5, 32, 32), material);\n\t\tsphere.castShadow = true;\n\t\tsphere.position.x = -1.5;\n\n\t\tconst plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(5, 5), material);\n\t\tplane.rotation.x = -Math.PI * 0.5;\n\t\tplane.position.y = -0.65;\n\n\t\tthis.meshArr.push(cube, torus, sphere);\n\t\tthis.scene.add(cube, plane, torus, sphere);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onRender(): void {\n\t\tthis.controls.update();\n\t\tthis.renderer.render(this.scene, this.camera);\n\n\t\tconst elapsedTime = this.clock.getElapsedTime();\n\t\tthis.meshArr.forEach(obj => {\n\t\t\tobj.rotation.x = Math.sin(elapsedTime) * 1.5;\n\t\t\tobj.rotation.z = Math.cos(elapsedTime) * 1.5;\n\t\t\tobj.rotation.y = Math.abs(Math.sin(elapsedTime));\n\t\t});\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tprotected onDestroy(): void {\n\t\tthis.gui?.destroy();\n\t\tthis.meshArr.length = 0;\n\t}\n}\n"],"names":["makeXYZGUI","gui","vector3","name","onChangeFn","addFolder","add","onChange","ColorGUIHelper","constructor","obj","prop","this","value","getHexString","hexString","set","DegRadHelper","v","BaseApplication","canvas","appId","appName","width","height","viewCenter","handle","initRender","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","initScene","scene","initCamera","initLight","initModel","onCreating","onCreated","onRender","onDestroy","onResize","create","render","clear","requestAnimationFrame","bind","run","resize","innerWidth","innerHeight","camera","aspect","updateProjectionMatrix","Math","min","destroy","cancelAnimationFrame","console","log","BaseJourney","Journey15","clock","controls","enableDamping","axesHelp","position","lookAt","ambientLight","ambientGui","addColor","directionLight","directionGui","max","step","directionLightHelper","update","visible","hemisphereLight","hemisphereLightGui","hemisphereLightHelper","pointLight","pointLightGui","pointLightHelper","rectAreaLight","rectAreaLightGui","rotation","spotLight","PI","spotLightGui","spotLightHelper","meshArr","material","roughness","cube","torus","x","sphere","castShadow","plane","y","push","elapsedTime","getElapsedTime","forEach","sin","z","cos","abs","length"],"sourceRoot":""}