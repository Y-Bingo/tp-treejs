{"version":3,"file":"34.min_5a5800dba4.js","mappings":"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","sources":["webpack://tp_threejs/./src/ThreeJs/BaseApplication.ts","webpack://tp_threejs/./src/ThreeJs/Journey/BaseJourney.ts","webpack://tp_threejs/./src/ThreeJs/Journey/Journey12.ts"],"sourcesContent":["import { Camera, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from 'three';\nimport { STAGE } from './../Config';\n\n/**\n * 应用基类\n */\nexport class BaseApplication {\n\tpublic appId: string = '00';\n\tpublic appName: string = 'BASE';\n\tprotected width: number = STAGE.width;\n\tprotected height: number = STAGE.height;\n\tprotected canvas: HTMLCanvasElement = null;\n\n\tprotected scene: Scene;\n\tprotected camera: Camera;\n\tprotected renderer: WebGLRenderer;\n\tprotected viewCenter: Vector3 = new Vector3(0, 0, 0);\n\n\tpublic constructor(canvas: HTMLCanvasElement) {\n\t\tthis.canvas = canvas;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initRender(): void {\n\t\tconst renderer = new WebGLRenderer({\n\t\t\tantialias: true, // 抗锯齿开启\n\t\t\tcanvas: this.canvas,\n\t\t});\n\t\trenderer.setSize(this.width, this.height); // 设置渲染器的宽度和高度\n\t\trenderer.setClearColor('#000000', 1.0); // 设置背景颜色\n\t\trenderer.setPixelRatio(window.devicePixelRatio); // 设置设备像素比\n\n\t\tthis.renderer = renderer;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initScene(): void {\n\t\tconst scene = new Scene();\n\t\tthis.scene = scene;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initCamera(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initLight(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initModel(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreating(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreated(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始渲染\n\t */\n\tprotected onRender(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始销毁\n\t */\n\tprotected onDestroy(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始 resize\n\t */\n\tprotected onResize(): void {}\n\n\t/**\n\t * 创建后的调用\n\t */\n\tprivate create(): void {\n\t\tthis.onCreating();\n\t\tthis.initRender();\n\t\tthis.initScene();\n\t\tthis.initCamera();\n\t\tthis.initLight();\n\t\tthis.initModel();\n\t\tthis.onCreated();\n\t}\n\n\t/**\n\t * 渲染\n\t */\n\tprivate render(): void {\n\t\tthis.renderer?.clear();\n\t\tthis.onRender();\n\t\tthis.handle = requestAnimationFrame(this.render.bind(this));\n\t}\n\n\t/**\n\t * 开始执行\n\t */\n\tprivate handle: number = -1;\n\tpublic run(): void {\n\t\tthis.create();\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 视口变化\n\t */\n\tpublic resize(): void {\n\t\t// update size\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\n\t\t// update camera\n\t\tif (this.camera && this.camera instanceof PerspectiveCamera) {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\n\t\t// update renderer\n\t\tthis.renderer?.setSize(this.width, this.height);\n\t\tthis.renderer?.setPixelRatio(Math.min(2, window.devicePixelRatio));\n\n\t\tthis.onResize();\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t * 销毁清理\n\t */\n\tpublic destroy(): void {\n\t\tthis.onDestroy();\n\n\t\tthis.scene.clear();\n\t\tthis.renderer.clear();\n\t\tcancelAnimationFrame(this.handle);\n\t\tconsole.log(`销毁应用【${this.appId} ${this.appName}】`);\n\t}\n}\n","import { BaseApplication } from '../BaseApplication';\n\nexport class BaseJourney extends BaseApplication {}\n","import * as dat from 'dat.gui';\nimport {\n    AmbientLight,\n    BufferAttribute,\n    CubeTextureLoader,\n    LoadingManager,\n    Mesh,\n    MeshStandardMaterial,\n    PerspectiveCamera,\n    PlaneBufferGeometry,\n    PointLight,\n    SphereBufferGeometry,\n    TextureLoader,\n    TorusBufferGeometry,\n    Vector3\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { BaseJourney } from './BaseJourney';\n\n/**\n * 12 Journey materials\n */\nexport class Journey12 extends BaseJourney {\n\t/**\n\t * @override\n\t */\n\tprivate gui: dat.GUI;\n\tprivate controls: OrbitControls;\n\tprotected initCamera(): void {\n\t\tconst camera = new PerspectiveCamera(75, this.width / this.height);\n\t\tcamera.position.set(0, 0, 3);\n\t\tcamera.lookAt(new Vector3(0, 0, 0));\n\n\t\tthis.camera = camera;\n\t\tthis.scene.add(camera);\n\n\t\tthis.controls = new OrbitControls(camera, this.canvas);\n\t\t// this.controls.autoRotate = true;\n\t\tthis.controls.enableDamping = true;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initLight(): void {\n\t\tconst ambientLight = new AmbientLight(0xffffff, 0.5);\n\t\tthis.scene.add(ambientLight);\n\n\t\tconst light = new PointLight(0xffffff, 0.5);\n\t\tlight.position.x = 2;\n\t\tlight.position.y = 3;\n\t\tlight.position.z = 4;\n\t\tthis.scene.add(light);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initModel(): void {\n\t\t// DEBUG UI\n\t\tconst gui = new dat.GUI();\n\t\tthis.gui = gui;\n\n\t\t// Loader\n\t\tconst loadingMrg = new LoadingManager();\n\t\tloadingMrg.onLoad = () => {\n\t\t\tconsole.log('load Complete');\n\t\t};\n\t\tloadingMrg.onError = (url: string) => {\n\t\t\tconsole.log('load error: ', url);\n\t\t};\n\t\tloadingMrg.onProgress = (url: string, loaded: number, total: number) => {\n\t\t\tconsole.info(`loading.....${loaded}/${total} - ${url}`);\n\t\t};\n\t\tconst textureLoader = new TextureLoader(loadingMrg);\n\t\tconst cubeTextureLoader = new CubeTextureLoader();\n\n\t\tconst doorColorTexture = textureLoader.load('./resource/journey/door/color.jpg');\n\t\tconst doorAlphaTexture = textureLoader.load('./resource/journey/door/alpha.jpg');\n\t\tconst doorAmbientOcclusionTexture = textureLoader.load('./resource/journey/door/ambientOcclusion.jpg');\n\t\tconst doorHeightTexture = textureLoader.load('./resource/journey/door/height.jpg');\n\t\tconst doorNormalTexture = textureLoader.load('./resource/journey/door/normal.jpg');\n\t\tconst doorMetalnessTexture = textureLoader.load('./resource/journey/door/metalness.jpg');\n\t\tconst doorRoughnessTexture = textureLoader.load('./resource/journey/door/roughness.jpg');\n\t\tconst matcapTexture = textureLoader.load('./resource/journey/matcaps/8.png');\n\t\tconst gradientTexture = textureLoader.load('./resource/journey/gradients/5.jpg');\n\t\tconst gradientTexture3 = textureLoader.load('./resource/journey/gradients/3.jpg');\n\n\t\t// const material = new MeshBasicMaterial();\n\t\t// const material = new MeshLambertMaterial();\n\t\t// const material = new MeshPhongMaterial();\n\t\t// const material = new MeshStandardMaterial();\n\t\t// material.map = doorColorTexture;\n\t\t// material.side = DoubleSide;\n\t\t// material.wireframe = true;\n\t\t// material.transparent = true;\n\n\t\t// const material = new MeshNormalMaterial();\n\t\t// material.flatShading = true;\n\n\t\t// const material = new MeshMatcapMaterial();\n\t\t// material.matcap = matcapTexture;\n\n\t\t// const material = new MeshDepthMaterial();\n\n\t\t// const material = new MeshLambertMaterial();\n\n\t\t// const material = new MeshPhongMaterial();\n\t\t// material.shininess = 100;\n\t\t// material.specular = new Color(0x1188ff);\n\n\t\t// const material = new MeshToonMaterial();\n\t\t// gradientTexture.generateMipmaps = false;\n\t\t// gradientTexture.minFilter = NearestFilter;\n\t\t// gradientTexture.magFilter = NearestFilter;\n\t\t// material.gradientMap = gradientTexture;\n\t\t// material.gradientMap = gradientTexture3;\n\n\t\t// const material = new MeshStandardMaterial();\n\t\t// material.metalness = 0;\n\t\t// material.roughness = 1;\n\t\t// material.map = doorColorTexture;\n\t\t// material.aoMap = doorAmbientOcclusionTexture;\n\t\t// material.aoMapIntensity = 2;\n\t\t// material.displacementMap = doorHeightTexture;\n\t\t// material.displacementScale = 0.05;\n\t\t// material.metalnessMap = doorMetalnessTexture;\n\t\t// material.roughnessMap = doorRoughnessTexture;\n\t\t// material.normalMap = doorNormalTexture;\n\t\t// material.normalScale.set(0.5, 0.5);\n\t\t// material.transparent = true;\n\t\t// material.side = DoubleSide;\n\t\t// material.alphaMap = doorAlphaTexture;\n\n\t\t// const material = new MeshPhysicalMaterial();\n\t\t// material.metalness = 0;\n\t\t// material.roughness = 1;\n\t\t// material.map = doorColorTexture;\n\t\t// material.aoMap = doorAmbientOcclusionTexture;\n\t\t// material.aoMapIntensity = 1;\n\t\t// material.displacementMap = doorHeightTexture;\n\t\t// material.displacementScale = 0.05;\n\t\t// material.metalnessMap = doorMetalnessTexture;\n\t\t// material.roughnessMap = doorRoughnessTexture;\n\t\t// material.normalMap = doorNormalTexture;\n\t\t// material.normalScale.set(0.5, 0.5);\n\t\t// material.transparent = true;\n\t\t// material.alphaMap = doorAlphaTexture;\n\t\t// material.clearcoat = 1;\n\t\t// material.clearcoatRoughness = 0;\n\n\t\tconst environmentMapTexture = cubeTextureLoader.load([\n\t\t\t'./resource/journey/environmentMaps/1/px.jpg',\n\t\t\t'./resource/journey/environmentMaps/1/nx.jpg',\n\t\t\t'./resource/journey/environmentMaps/1/py.jpg',\n\t\t\t'./resource/journey/environmentMaps/1/ny.jpg',\n\t\t\t'./resource/journey/environmentMaps/1/pz.jpg',\n\t\t\t'./resource/journey/environmentMaps/1/nz.jpg',\n\t\t]);\n\n\t\tconst material = new MeshStandardMaterial();\n\t\tmaterial.metalness = 0.7;\n\t\tmaterial.roughness = 0.2;\n\t\tgui.add(material, 'metalness').min(0).max(1).step(0.0001);\n\t\tgui.add(material, 'roughness').min(0).max(1).step(0.0001);\n\t\tmaterial.envMap = environmentMapTexture;\n\n\t\t// mesh\n\t\tconst sphere = new Mesh(new SphereBufferGeometry(0.5, 64, 64), material);\n\t\tsphere.geometry.setAttribute('uv2', new BufferAttribute(sphere.geometry.attributes.uv.array, 2));\n\t\tsphere.position.x = -1.5;\n\n\t\tconst plane = new Mesh(new PlaneBufferGeometry(1, 1, 100, 100), material);\n\t\tplane.geometry.setAttribute('uv2', new BufferAttribute(plane.geometry.attributes.uv.array, 2));\n\n\t\tconst torus = new Mesh(new TorusBufferGeometry(0.3, 0.2, 64, 128), material);\n\t\ttorus.geometry.setAttribute('uv2', new BufferAttribute(torus.geometry.attributes.uv.array, 2));\n\t\ttorus.position.x = 1.5;\n\t\tthis.scene.add(sphere, plane, torus);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onRender(): void {\n\t\tthis.controls.update();\n\t\tthis.renderer.render(this.scene, this.camera);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tprotected onDestroy(): void {\n\t\tthis.gui?.destroy();\n\t}\n}\n"],"names":["BaseApplication","canvas","appId","appName","width","height","viewCenter","handle","this","initRender","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","initScene","scene","initCamera","initLight","initModel","onCreating","onCreated","onRender","onDestroy","onResize","create","render","clear","requestAnimationFrame","bind","run","resize","innerWidth","innerHeight","camera","aspect","updateProjectionMatrix","Math","min","destroy","cancelAnimationFrame","console","log","BaseJourney","Journey12","position","set","lookAt","add","controls","enableDamping","ambientLight","light","x","y","z","gui","loadingMrg","onLoad","onError","url","onProgress","loaded","total","info","textureLoader","cubeTextureLoader","environmentMapTexture","load","material","metalness","roughness","max","step","envMap","sphere","geometry","setAttribute","attributes","uv","array","plane","torus","update"],"sourceRoot":""}