{"version":3,"file":"21.min_cf02189c98.js","mappings":"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","sources":["webpack://tp_threejs/./src/ThreeJs/BaseApplication.ts","webpack://tp_threejs/./src/ThreeJs/Journey/BaseJourney.ts","webpack://tp_threejs/./src/ThreeJs/Journey/Journey22.ts"],"sourcesContent":["import { Camera, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from 'three';\nimport { STAGE } from './../Config';\n\n/**\n * 应用基类\n */\nexport class BaseApplication {\n\tpublic appId: string = '00';\n\tpublic appName: string = 'BASE';\n\tprotected width: number = STAGE.width;\n\tprotected height: number = STAGE.height;\n\tprotected canvas: HTMLCanvasElement = null;\n\n\tprotected scene: Scene;\n\tprotected camera: Camera;\n\tprotected renderer: WebGLRenderer;\n\tprotected viewCenter: Vector3 = new Vector3(0, 0, 0);\n\n\tpublic constructor(canvas: HTMLCanvasElement) {\n\t\tthis.canvas = canvas;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initRender(): void {\n\t\tconst renderer = new WebGLRenderer({\n\t\t\tantialias: true, // 抗锯齿开启\n\t\t\tcanvas: this.canvas,\n\t\t});\n\t\trenderer.setSize(this.width, this.height); // 设置渲染器的宽度和高度\n\t\trenderer.setClearColor('#000000', 1.0); // 设置背景颜色\n\t\trenderer.setPixelRatio(window.devicePixelRatio); // 设置设备像素比\n\n\t\tthis.renderer = renderer;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initScene(): void {\n\t\tconst scene = new Scene();\n\t\tthis.scene = scene;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initCamera(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initLight(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initModel(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreating(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreated(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始渲染\n\t */\n\tprotected onRender(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始销毁\n\t */\n\tprotected onDestroy(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始 resize\n\t */\n\tprotected onResize(): void {}\n\n\t/**\n\t * 创建后的调用\n\t */\n\tprivate create(): void {\n\t\tthis.onCreating();\n\t\tthis.initRender();\n\t\tthis.initScene();\n\t\tthis.initCamera();\n\t\tthis.initLight();\n\t\tthis.initModel();\n\t\tthis.onCreated();\n\t}\n\n\t/**\n\t * 渲染\n\t */\n\tprivate render(): void {\n\t\tthis.renderer?.clear();\n\t\tthis.onRender();\n\t\tthis.handle = requestAnimationFrame(this.render.bind(this));\n\t}\n\n\t/**\n\t * 开始执行\n\t */\n\tprivate handle: number = -1;\n\tpublic run(): void {\n\t\tthis.create();\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 视口变化\n\t */\n\tpublic resize(): void {\n\t\t// update size\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\n\t\t// update camera\n\t\tif (this.camera && this.camera instanceof PerspectiveCamera) {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\n\t\t// update renderer\n\t\tthis.renderer?.setSize(this.width, this.height);\n\t\tthis.renderer?.setPixelRatio(Math.min(2, window.devicePixelRatio));\n\n\t\tthis.onResize();\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t * 销毁清理\n\t */\n\tpublic destroy(): void {\n\t\tthis.onDestroy();\n\n\t\tthis.scene.clear();\n\t\tthis.renderer.clear();\n\t\tcancelAnimationFrame(this.handle);\n\t\tconsole.log(`销毁应用【${this.appId} ${this.appName}】`);\n\t}\n}\n","import { BaseApplication } from '../BaseApplication';\n\nexport class BaseJourney extends BaseApplication {}\n","import * as CANNON from 'cannon-es';\nimport * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { BaseJourney } from './BaseJourney';\n\n/**\n * Journey - Physics\n */\n\nexport class Journey22 extends BaseJourney {\n\tprivate gui: dat.GUI;\n\tprivate clock: THREE.Clock;\n\tprivate controls: OrbitControls;\n\tprivate params: any;\n\tprivate world: CANNON.World;\n\n\t/**\n\t * @override\n\t */\n\tprotected onCreating(): void {\n\t\t// params\n\t\tthis.params = {\n\t\t\tmaterialColor: 0xffeded,\n\t\t};\n\n\t\t// clock\n\t\tthis.clock = new THREE.Clock();\n\n\t\t// GUI\n\t\tthis.gui = new dat.GUI();\n\n\t\t// world\n\t\tconst world = new CANNON.World();\n\t\tworld.gravity.set(0, -9.82, 0);\n\t\tworld.broadphase = new CANNON.SAPBroadphase(world);\n\t\tworld.allowSleep = true;\n\t\tthis.world = world;\n\n\t\tconst defaultMaterial = new CANNON.Material('default');\n\n\t\tconst defaultContactMaterial = new CANNON.ContactMaterial(defaultMaterial, defaultMaterial, {\n\t\t\tfriction: 0.1,\n\t\t\trestitution: 0.7,\n\t\t});\n\t\tworld.defaultContactMaterial = defaultContactMaterial;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onCreated(): void {\n\t\t// controller\n\t\tthis.controls = new OrbitControls(this.camera, this.canvas);\n\t\tthis.controls.enableDamping = true;\n\n\t\t// shadow\n\t\tthis.renderer.shadowMap.enabled = true;\n\t\tthis.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tprotected initLight(): void {\n\t\tconst ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n\t\tthis.scene.add(ambientLight);\n\n\t\tconst directionalLight = new THREE.DirectionalLight(0xffffff, 0.2);\n\t\tdirectionalLight.castShadow = true;\n\t\tdirectionalLight.shadow.mapSize.set(1024, 1024);\n\t\tdirectionalLight.shadow.camera.far = 15;\n\t\tdirectionalLight.shadow.camera.left = -7;\n\t\tdirectionalLight.shadow.camera.top = 7;\n\t\tdirectionalLight.shadow.camera.right = 7;\n\t\tdirectionalLight.shadow.camera.bottom = -7;\n\t\tdirectionalLight.position.set(5, 5, 5);\n\t\tthis.scene.add(directionalLight);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initCamera(): void {\n\t\tconst camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 100);\n\t\tcamera.position.set(-3, 3, 3);\n\t\tthis.camera = camera;\n\t\tthis.scene.add(camera);\n\t}\n\n\tprivate defaultMaterial: THREE.MeshStandardMaterial = new THREE.MeshStandardMaterial({\n\t\tmetalness: 0.3,\n\t\troughness: 0.4,\n\t});\n\tprivate boxGeometry: THREE.BoxBufferGeometry = new THREE.BoxBufferGeometry(1, 1, 1);\n\tprivate objectUpdate: any[] = [];\n\tprivate createBox(width, height, depth, position: { x: number; y: number; z: number }): void {\n\t\t// sphere\n\t\tconst sphere = new THREE.Mesh(this.boxGeometry, this.defaultMaterial);\n\t\tsphere.castShadow = true;\n\t\tsphere.scale.set(width, height, depth);\n\t\tsphere.position.set(position.x, position.y, position.z);\n\t\tthis.scene.add(sphere);\n\n\t\t// Cannon Body\n\t\tconst sphereShape = new CANNON.Box(new CANNON.Vec3(width * 0.5, height * 0.5, depth * 0.5));\n\t\tconst sphereBody = new CANNON.Body({\n\t\t\tmass: 1,\n\t\t\tposition: new CANNON.Vec3(position.x, position.y, position.z),\n\t\t\tshape: sphereShape,\n\t\t});\n\t\tthis.world.addBody(sphereBody);\n\n\t\tthis.objectUpdate.push({\n\t\t\tmesh: sphere,\n\t\t\tbody: sphereBody,\n\t\t});\n\t}\n\n\tprivate sphereGeometry: THREE.SphereBufferGeometry = new THREE.SphereBufferGeometry(1, 32, 32);\n\tprivate createSphere(radius: number, position: { x: number; y: number; z: number }): void {\n\t\t// sphere\n\t\tconst sphere = new THREE.Mesh(this.sphereGeometry, this.defaultMaterial);\n\t\tsphere.castShadow = true;\n\t\tsphere.scale.set(radius, radius, radius);\n\t\tsphere.position.set(position.x, position.y, position.z);\n\t\tthis.scene.add(sphere);\n\n\t\t// Cannon Body\n\t\tconst sphereShape = new CANNON.Sphere(radius);\n\t\tconst sphereBody = new CANNON.Body({\n\t\t\tmass: 1,\n\t\t\tposition: new CANNON.Vec3(position.x, position.y, position.z),\n\t\t\tshape: sphereShape,\n\t\t});\n\t\tthis.world.addBody(sphereBody);\n\n\t\tthis.objectUpdate.push({\n\t\t\tmesh: sphere,\n\t\t\tbody: sphereBody,\n\t\t});\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initModel(): void {\n\t\tconst cubeTextureLoader = new THREE.CubeTextureLoader();\n\t\tconst environmentMapTexture = cubeTextureLoader.load(['']);\n\n\t\t// floor\n\t\tconst floor = new THREE.Mesh(\n\t\t\tnew THREE.PlaneBufferGeometry(10, 10),\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\tcolor: 0x777777,\n\t\t\t\tmetalness: 0.3,\n\t\t\t\troughness: 0.4,\n\t\t\t}),\n\t\t);\n\t\tfloor.rotation.x = -Math.PI * 0.5;\n\t\tfloor.receiveShadow = true;\n\t\tthis.scene.add(floor);\n\n\t\tconst floorShape = new CANNON.Plane();\n\t\tconst floorBody = new CANNON.Body({\n\t\t\tmass: 0,\n\t\t\tshape: floorShape,\n\t\t});\n\t\tfloorBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI * 0.5);\n\t\tthis.world.addBody(floorBody);\n\n\t\t// DEBUG\n\t\tconst gui = this.gui;\n\t\tconst debugObject: any = {};\n\t\tdebugObject.createBox = () => {\n\t\t\tthis.createBox(Math.random(), Math.random(), Math.random(), { x: (Math.random() - 0.5) * 3, y: 3, z: (Math.random() - 0.5) * 3 });\n\t\t};\n\t\tdebugObject.createSphere = () => {\n\t\t\tthis.createSphere(0.5, { x: (Math.random() - 0.5) * 3, y: 3, z: (Math.random() - 0.5) * 3 });\n\t\t};\n\t\tdebugObject.reset = () => {\n\t\t\tfor (let object of this.objectUpdate) {\n\t\t\t\tthis.world.removeBody(object.body);\n\t\t\t\tthis.scene.remove(object.mesh);\n\t\t\t}\n\t\t};\n\t\tgui.add(debugObject, 'createBox');\n\t\tgui.add(debugObject, 'createSphere');\n\t\tgui.add(debugObject, 'reset');\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprivate lastTimeStamp: number = 0;\n\tprotected onRender(): void {\n\t\tthis.controls.update();\n\t\tthis.renderer.render(this.scene, this.camera);\n\n\t\tconst elapsedTime = this.clock.getElapsedTime();\n\t\tconst deltaTime = elapsedTime - this.lastTimeStamp;\n\t\tthis.lastTimeStamp = elapsedTime;\n\t\tthis.world.step(1 / 60, deltaTime, 3);\n\n\t\tfor (let object of this.objectUpdate) {\n\t\t\tobject.mesh.position.copy(object.body.position);\n\t\t\tobject.mesh.quaternion.copy(object.body.quaternion);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tprotected onDestroy(): void {\n\t\tthis.gui?.destroy();\n\t}\n}\n"],"names":["BaseApplication","canvas","appId","appName","width","height","viewCenter","handle","this","initRender","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","initScene","scene","initCamera","initLight","initModel","onCreating","onCreated","onRender","onDestroy","onResize","create","render","clear","requestAnimationFrame","bind","run","resize","innerWidth","innerHeight","camera","aspect","updateProjectionMatrix","Math","min","destroy","cancelAnimationFrame","console","log","BaseJourney","Journey22","defaultMaterial","metalness","roughness","boxGeometry","objectUpdate","sphereGeometry","lastTimeStamp","params","materialColor","clock","gui","world","gravity","set","broadphase","allowSleep","defaultContactMaterial","friction","restitution","controls","enableDamping","shadowMap","enabled","type","ambientLight","add","directionalLight","castShadow","shadow","mapSize","far","left","top","right","bottom","position","createBox","depth","sphere","scale","x","y","z","sphereShape","sphereBody","mass","shape","addBody","push","mesh","body","createSphere","radius","load","floor","color","rotation","PI","receiveShadow","floorShape","floorBody","quaternion","setFromAxisAngle","debugObject","random","reset","object","removeBody","remove","update","elapsedTime","getElapsedTime","deltaTime","step","copy"],"sourceRoot":""}