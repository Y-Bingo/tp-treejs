{"version":3,"file":"27.min_352fc7ae32.js","mappings":"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","sources":["webpack://tp_threejs/./src/Helper/DebugHelper.ts","webpack://tp_threejs/./src/ThreeJs/BaseApplication.ts","webpack://tp_threejs/./src/ThreeJs/Journey/BaseJourney.ts","webpack://tp_threejs/./src/ThreeJs/Journey/Journey17.ts"],"sourcesContent":["import * as dat from 'dat.gui';\nimport * as THREE from 'three';\n\nexport function makeXYZGUI(gui: dat.GUI, vector3: THREE.Vector3, name?: string, onChangeFn?: () => void) {\n\tif (name) {\n\t\tgui = gui.addFolder(name);\n\t}\n\tgui.add(vector3, 'x', -10, 10, 0.01).onChange(onChangeFn);\n\tgui.add(vector3, 'y', 0, 10, 0.01).onChange(onChangeFn);\n\tgui.add(vector3, 'z', -10, 10, 0.01).onChange(onChangeFn);\n\t// gui.open();\n}\n\n/**\n * 颜色转换\n */\nexport class ColorGUIHelper {\n\tprivate obj: any;\n\tprivate prop: any;\n\tconstructor(obj, prop) {\n\t\tthis.obj = obj;\n\t\tthis.prop = prop;\n\t}\n\tget value() {\n\t\treturn `#${this.obj[this.prop].getHexString()}`;\n\t}\n\tset value(hexString) {\n\t\tthis.obj[this.prop].set(hexString);\n\t}\n}\n\n/**\n * 角度转换\n */\nexport class DegRadHelper {\n\tprivate obj: any;\n\tprivate prop: any;\n\tconstructor(obj, prop) {\n\t\tthis.obj = obj;\n\t\tthis.prop = prop;\n\t}\n\tget value() {\n\t\treturn THREE.MathUtils.radToDeg(this.obj[this.prop]);\n\t}\n\tset value(v) {\n\t\tthis.obj[this.prop] = THREE.MathUtils.degToRad(v);\n\t}\n}\n\n/**\n * 字符转换\n */\nexport class StringToNumberHelper {\n\tprivate obj: any;\n\tprivate prop: any;\n\tconstructor(obj, prop) {\n\t\tthis.obj = obj;\n\t\tthis.prop = prop;\n\t}\n\tget value() {\n\t\treturn this.obj[this.prop];\n\t}\n\tset value(v) {\n\t\tthis.obj[this.prop] = parseFloat(v);\n\t}\n}\n","import { Camera, PerspectiveCamera, Scene, Vector3, WebGLRenderer } from 'three';\nimport { STAGE } from './../Config';\n\n/**\n * 应用基类\n */\nexport class BaseApplication {\n\tpublic appId: string = '00';\n\tpublic appName: string = 'BASE';\n\tprotected width: number = STAGE.width;\n\tprotected height: number = STAGE.height;\n\tprotected canvas: HTMLCanvasElement = null;\n\n\tprotected scene: Scene;\n\tprotected camera: Camera;\n\tprotected renderer: WebGLRenderer;\n\tprotected viewCenter: Vector3 = new Vector3(0, 0, 0);\n\n\tpublic constructor(canvas: HTMLCanvasElement) {\n\t\tthis.canvas = canvas;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initRender(): void {\n\t\tconst renderer = new WebGLRenderer({\n\t\t\tantialias: true, // 抗锯齿开启\n\t\t\tcanvas: this.canvas,\n\t\t});\n\t\trenderer.setSize(this.width, this.height); // 设置渲染器的宽度和高度\n\t\trenderer.setClearColor('#000000', 1.0); // 设置背景颜色\n\t\trenderer.setPixelRatio(window.devicePixelRatio); // 设置设备像素比\n\n\t\tthis.renderer = renderer;\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initScene(): void {\n\t\tconst scene = new Scene();\n\t\tthis.scene = scene;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected initCamera(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initLight(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t */\n\tprotected initModel(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreating(): void {}\n\n\t/**\n\t * @override 子类复写\n\t */\n\tprotected onCreated(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始渲染\n\t */\n\tprotected onRender(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始销毁\n\t */\n\tprotected onDestroy(): void {}\n\n\t/**\n\t * @override 子类覆写\n\t * 开始 resize\n\t */\n\tprotected onResize(): void {}\n\n\t/**\n\t * 创建后的调用\n\t */\n\tprivate create(): void {\n\t\tthis.onCreating();\n\t\tthis.initRender();\n\t\tthis.initScene();\n\t\tthis.initCamera();\n\t\tthis.initLight();\n\t\tthis.initModel();\n\t\tthis.onCreated();\n\t}\n\n\t/**\n\t * 渲染\n\t */\n\tprivate render(): void {\n\t\tthis.renderer?.clear();\n\t\tthis.onRender();\n\t\tthis.handle = requestAnimationFrame(this.render.bind(this));\n\t}\n\n\t/**\n\t * 开始执行\n\t */\n\tprivate handle: number = -1;\n\tpublic run(): void {\n\t\tthis.create();\n\t\tthis.render();\n\t}\n\n\t/**\n\t * 视口变化\n\t */\n\tpublic resize(): void {\n\t\t// update size\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\n\t\t// update camera\n\t\tif (this.camera && this.camera instanceof PerspectiveCamera) {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\n\t\t// update renderer\n\t\tthis.renderer?.setSize(this.width, this.height);\n\t\tthis.renderer?.setPixelRatio(Math.min(2, window.devicePixelRatio));\n\n\t\tthis.onResize();\n\t}\n\n\t/**\n\t * @override 子类覆写\n\t * 销毁清理\n\t */\n\tpublic destroy(): void {\n\t\tthis.onDestroy();\n\n\t\tthis.scene.clear();\n\t\tthis.renderer.clear();\n\t\tcancelAnimationFrame(this.handle);\n\t\tconsole.log(`销毁应用【${this.appId} ${this.appName}】`);\n\t}\n}\n","import { BaseApplication } from '../BaseApplication';\n\nexport class BaseJourney extends BaseApplication {}\n","import * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { ColorGUIHelper, makeXYZGUI } from '../../Helper/DebugHelper';\nimport { BaseJourney } from './BaseJourney';\n\n/**\n * Journey - Haunted House\n */\n\nexport class Journey17 extends BaseJourney {\n\tprivate gui: dat.GUI;\n\tprivate clock: THREE.Clock;\n\n\t/**\n\t * @override\n\t */\n\tprotected onCreating(): void {\n\t\t// clock\n\t\tthis.clock = new THREE.Clock();\n\n\t\t// GUI\n\t\tthis.gui = new dat.GUI();\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onCreated(): void {\n\t\t// camera controller\n\t\tthis.controls = new OrbitControls(this.camera, this.canvas);\n\t\t// this.controls.autoRotate = true;\n\t\tthis.controls.enableDamping = true;\n\n\t\t// axes\n\t\t// const axesHelp = new THREE.AxesHelper(10);\n\t\t// this.scene.add(axesHelp);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprivate controls: OrbitControls;\n\tprotected initCamera(): void {\n\t\tconst camera = new THREE.PerspectiveCamera(75, this.width / this.height);\n\t\tcamera.position.set(0, 4, 8);\n\t\tcamera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\t\tthis.camera = camera;\n\t\tthis.scene.add(camera);\n\t}\n\n\tprotected initLight(): void {\n\t\tconst scene = this.scene;\n\t\t// Ambient Light\n\t\tconst ambientLight = new THREE.AmbientLight(0xb9d5ff, 0.3);\n\t\tconst ambientGui = this.gui.addFolder('AmbientLight');\n\t\tambientGui.add(ambientLight, 'intensity', 0, 1, 0.01);\n\t\tambientGui.add(ambientLight, 'visible');\n\t\tambientGui.addColor(new ColorGUIHelper(ambientLight, 'color'), 'value').name('color');\n\t\tscene.add(ambientLight);\n\n\t\t// Direction Light\n\t\tconst directionGui = this.gui.addFolder('DirectionalLight');\n\t\tconst directionLight = new THREE.DirectionalLight(0xb9d5ff, 0.12);\n\t\tdirectionLight.shadow.mapSize.width = 256;\n\t\tdirectionLight.shadow.mapSize.height = 256;\n\t\tdirectionLight.shadow.camera.far = 15;\n\t\tdirectionLight.position.set(4, 5, -2);\n\n\t\tdirectionGui.add(directionLight, 'intensity').min(0).max(1.3).step(0.01);\n\t\tdirectionGui.add(directionLight, 'visible');\n\t\tdirectionGui.addColor(new ColorGUIHelper(directionLight, 'color'), 'value').name('color');\n\t\tmakeXYZGUI(directionGui, directionLight.position, null, () => {\n\t\t\t// directionLightHelper.update();\n\t\t});\n\t\tscene.add(directionLight);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprivate ghostArr: THREE.PointLight[];\n\tprotected initModel(): void {\n\t\tconst material = new THREE.MeshStandardMaterial();\n\t\tmaterial.roughness = 0.7;\n\n\t\t// Texture\n\t\tconst textureLoader = new THREE.TextureLoader();\n\n\t\tconst doorColorTexture = textureLoader.load('./resource/journey/door/color.jpg');\n\t\tconst doorAlphaTexture = textureLoader.load('./resource/journey/door/alpha.jpg');\n\t\tconst doorAmbientOcclusionTexture = textureLoader.load('./resource/journey/door/ambientOcclusion.jpg');\n\t\tconst doorHeightTexture = textureLoader.load('./resource/journey/door/height.jpg');\n\t\tconst doorNormalTexture = textureLoader.load('./resource/journey/door/normal.jpg');\n\t\tconst doorMetalnessTexture = textureLoader.load('./resource/journey/door/metalness.jpg');\n\t\tconst doorRoughnessTexture = textureLoader.load('./resource/journey/door/roughness.jpg');\n\n\t\tconst bricksColorTexture = textureLoader.load('./resource/journey/bricks/color.jpg');\n\t\tconst bricksAmbientTexture = textureLoader.load('./resource/journey/bricks/ambientOcclusion.jpg');\n\t\tconst bricksNormalTexture = textureLoader.load('./resource/journey/bricks/normal.jpg');\n\t\tconst bricksRoughnessTexture = textureLoader.load('./resource/journey/bricks/roughness.jpg');\n\n\t\tconst grassColorTexture = textureLoader.load('./resource/journey/grass/color.jpg');\n\t\tconst grassAmbientTexture = textureLoader.load('./resource/journey/grass/ambientOcclusion.jpg');\n\t\tconst grassNormalTexture = textureLoader.load('./resource/journey/grass/normal.jpg');\n\t\tconst grassRoughnessTexture = textureLoader.load('./resource/journey/grass/roughness.jpg');\n\n\t\tgrassColorTexture.repeat.set(8, 8);\n\t\tgrassAmbientTexture.repeat.set(8, 8);\n\t\tgrassNormalTexture.repeat.set(8, 8);\n\t\tgrassRoughnessTexture.repeat.set(8, 8);\n\n\t\tgrassColorTexture.wrapS = THREE.RepeatWrapping;\n\t\tgrassAmbientTexture.wrapS = THREE.RepeatWrapping;\n\t\tgrassNormalTexture.wrapS = THREE.RepeatWrapping;\n\t\tgrassRoughnessTexture.wrapS = THREE.RepeatWrapping;\n\n\t\tgrassColorTexture.wrapT = THREE.RepeatWrapping;\n\t\tgrassAmbientTexture.wrapT = THREE.RepeatWrapping;\n\t\tgrassNormalTexture.wrapT = THREE.RepeatWrapping;\n\t\tgrassRoughnessTexture.wrapT = THREE.RepeatWrapping;\n\n\t\t// Fog\n\t\tconst fog = new THREE.Fog(0x262837, 1, 15);\n\t\tthis.scene.fog = fog;\n\t\tthis.renderer.setClearColor(0x262837);\n\n\t\t// House\n\t\tconst house = new THREE.Group();\n\n\t\tconst walls = new THREE.Mesh(\n\t\t\tnew THREE.BoxBufferGeometry(4, 2.5, 4),\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\tmap: bricksColorTexture,\n\t\t\t\taoMap: bricksAmbientTexture,\n\t\t\t\tnormalMap: bricksNormalTexture,\n\t\t\t\troughnessMap: bricksRoughnessTexture,\n\t\t\t}),\n\t\t);\n\t\twalls.geometry.setAttribute('uv2', new THREE.Float32BufferAttribute(walls.geometry.attributes.uv.array, 2));\n\t\twalls.position.y = 1.25;\n\t\thouse.add(walls);\n\n\t\tconst roof = new THREE.Mesh(\n\t\t\tnew THREE.ConeBufferGeometry(3.5, 1, 4),\n\t\t\tnew THREE.MeshBasicMaterial({\n\t\t\t\tcolor: 0xb35f45,\n\t\t\t}),\n\t\t);\n\t\troof.position.set(0, 3, 0);\n\t\troof.rotation.y = Math.PI / 4;\n\t\thouse.add(roof);\n\n\t\tconst door = new THREE.Mesh(\n\t\t\tnew THREE.PlaneBufferGeometry(2, 2, 100, 100),\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\tmap: doorColorTexture,\n\t\t\t\talphaMap: doorAlphaTexture,\n\t\t\t\ttransparent: true,\n\t\t\t\taoMap: doorAmbientOcclusionTexture,\n\t\t\t\tdisplacementMap: doorHeightTexture,\n\t\t\t\tdisplacementScale: 0.1,\n\t\t\t\tnormalMap: doorNormalTexture,\n\t\t\t\tmetalnessMap: doorMetalnessTexture,\n\t\t\t\troughnessMap: doorRoughnessTexture,\n\t\t\t}),\n\t\t);\n\t\tdoor.geometry.setAttribute('uv2', new THREE.Float32BufferAttribute(door.geometry.attributes.uv.array, 2));\n\t\tdoor.position.y = 1;\n\t\tdoor.position.z = 2 + 0.01;\n\t\thouse.add(door);\n\n\t\tconst bushGeometry = new THREE.SphereBufferGeometry(1, 16, 16);\n\t\tconst bushMaterial = new THREE.MeshStandardMaterial({ color: 0x89c854 });\n\t\tconst bush1 = new THREE.Mesh(bushGeometry, bushMaterial);\n\t\tbush1.scale.set(0.5, 0.5, 0.5);\n\t\tbush1.position.set(1.8, 0.2, 2.2);\n\n\t\tconst bush2 = new THREE.Mesh(bushGeometry, bushMaterial);\n\t\tbush2.scale.set(0.25, 0.25, 0.25);\n\t\tbush2.position.set(1.2, 0.2, 2.2);\n\n\t\tconst bush3 = new THREE.Mesh(bushGeometry, bushMaterial);\n\t\tbush3.scale.set(0.4, 0.4, 0.4);\n\t\tbush3.position.set(-1.6, 0.2, 2);\n\n\t\tconst bush4 = new THREE.Mesh(bushGeometry, bushMaterial);\n\t\tbush4.scale.set(0.15, 0.15, 0.15);\n\t\tbush4.position.set(-1.6, 0.2, 2.4);\n\n\t\t// door light\n\t\tconst doorLight = new THREE.PointLight(0xff7d46, 1, 7);\n\t\tdoorLight.castShadow = true;\n\t\tdoorLight.shadow.mapSize.width = 256;\n\t\tdoorLight.shadow.mapSize.height = 256;\n\t\tdoorLight.shadow.camera.far = 7;\n\t\tdoorLight.position.set(0, 2.0, 2.7);\n\n\t\thouse.add(bush1, bush2, bush3, bush4, doorLight);\n\n\t\t// graves\n\t\tconst graves = new THREE.Group();\n\t\tconst graveMaterial = new THREE.MeshStandardMaterial({ color: 0x727272 });\n\t\tconst graveGeometry = new THREE.BoxBufferGeometry(0.6, 0.8, 0.1);\n\n\t\tfor (let i = 0; i < 30; i++) {\n\t\t\tconst angle = Math.random() * Math.PI * 2;\n\t\t\tconst radius = 3 + Math.random() * 6;\n\t\t\tconst x = Math.sin(angle) * radius;\n\t\t\tconst z = Math.cos(angle) * radius;\n\n\t\t\tconst grave = new THREE.Mesh(graveGeometry, graveMaterial);\n\t\t\tgrave.castShadow = true;\n\t\t\tgrave.position.set(x, 0.3, z);\n\t\t\tgrave.rotation.y = (Math.random() - 0.5) * 0.4;\n\t\t\tgrave.rotation.z = (Math.random() - 0.5) * 0.4;\n\t\t\tgraves.add(grave);\n\t\t}\n\n\t\t// Floor\n\t\tconst floor = new THREE.Mesh(\n\t\t\tnew THREE.PlaneBufferGeometry(20, 20),\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\tmap: grassColorTexture,\n\t\t\t\taoMap: grassAmbientTexture,\n\t\t\t\tnormalMap: grassNormalTexture,\n\t\t\t\troughnessMap: grassRoughnessTexture,\n\t\t\t}),\n\t\t);\n\t\tfloor.geometry.setAttribute('uv2', new THREE.Float32BufferAttribute(floor.geometry.attributes.uv.array, 2));\n\t\tfloor.rotation.x = -Math.PI * 0.5;\n\n\t\tthis.scene.add(floor, house, graves);\n\n\t\t// Ghost\n\t\tconst ghost1 = new THREE.PointLight(0xff00ff, 2, 3);\n\t\tconst ghost2 = new THREE.PointLight(0x00ffff, 2, 3);\n\t\tconst ghost3 = new THREE.PointLight(0xffff00, 2, 3);\n\t\tthis.scene.add(ghost1, ghost2, ghost3);\n\t\tthis.ghostArr = [ghost1, ghost2, ghost3];\n\n\t\t// shadow\n\t\tghost1.castShadow = true;\n\t\tghost1.shadow.mapSize.width = 256;\n\t\tghost1.shadow.mapSize.height = 256;\n\t\tghost1.shadow.camera.far = 7;\n\t\tghost2.castShadow = true;\n\t\tghost2.shadow.mapSize.width = 256;\n\t\tghost2.shadow.mapSize.height = 256;\n\t\tghost2.shadow.camera.far = 7;\n\t\tghost3.castShadow = true;\n\t\tghost3.shadow.mapSize.width = 256;\n\t\tghost3.shadow.mapSize.height = 256;\n\t\tghost3.shadow.camera.far = 7;\n\n\t\tbush1.castShadow = true;\n\t\tbush2.castShadow = true;\n\t\tbush3.castShadow = true;\n\t\tbush4.castShadow = true;\n\n\t\tfloor.receiveShadow = true;\n\n\t\tthis.renderer.shadowMap.enabled = true;\n\t\tthis.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tprotected onRender(): void {\n\t\tthis.controls.update();\n\t\tthis.renderer.render(this.scene, this.camera);\n\n\t\tconst elapsedTime = this.clock.getElapsedTime();\n\t\tthis.ghostArr.forEach((ghost, index) => {\n\t\t\tconst angle = Math.pow(-1, index) * elapsedTime * (0.3 + index * 0.1);\n\t\t\tghost.position.x = Math.cos(angle) * (4 + index);\n\t\t\tghost.position.y = Math.sin(angle) * (4 + index);\n\t\t\tghost.position.z = Math.sin(angle) * (4 + index);\n\t\t});\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tprotected onDestroy(): void {\n\t\tthis.gui?.destroy();\n\t}\n}\n"],"names":["makeXYZGUI","gui","vector3","name","onChangeFn","addFolder","add","onChange","ColorGUIHelper","constructor","obj","prop","this","value","getHexString","hexString","set","DegRadHelper","v","BaseApplication","canvas","appId","appName","width","height","viewCenter","handle","initRender","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","initScene","scene","initCamera","initLight","initModel","onCreating","onCreated","onRender","onDestroy","onResize","create","render","clear","requestAnimationFrame","bind","run","resize","innerWidth","innerHeight","camera","aspect","updateProjectionMatrix","Math","min","destroy","cancelAnimationFrame","console","log","BaseJourney","Journey17","clock","controls","enableDamping","position","lookAt","ambientLight","ambientGui","addColor","directionGui","directionLight","shadow","mapSize","far","max","step","roughness","textureLoader","doorColorTexture","load","doorAlphaTexture","doorAmbientOcclusionTexture","doorHeightTexture","doorNormalTexture","doorMetalnessTexture","doorRoughnessTexture","bricksColorTexture","bricksAmbientTexture","bricksNormalTexture","bricksRoughnessTexture","grassColorTexture","grassAmbientTexture","grassNormalTexture","grassRoughnessTexture","repeat","wrapS","wrapT","fog","house","walls","map","aoMap","normalMap","roughnessMap","geometry","setAttribute","attributes","uv","array","y","roof","color","rotation","PI","door","alphaMap","transparent","displacementMap","displacementScale","metalnessMap","z","bushGeometry","bushMaterial","bush1","scale","bush2","bush3","bush4","doorLight","castShadow","graves","graveMaterial","graveGeometry","i","angle","random","radius","x","sin","cos","grave","floor","ghost1","ghost2","ghost3","ghostArr","receiveShadow","shadowMap","enabled","type","update","elapsedTime","getElapsedTime","forEach","ghost","index","pow"],"sourceRoot":""}